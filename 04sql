--datatype conversion

select hire_date
from employees
where hire_date = '2003/06/17';

select salary
from employees
where salary = '7000';

select hire_date || ''
from employees;

select salary || ''
from employees;
-----------------------

select to_char(hire_date) --날짜를 문자로 바꾸는 방법
from employees;

select to_char(sysdate, 'yyyy-mm-dd') 
from dual;

select to_char(sysdate, 'YEAR MONTH DDsp DAY(DY)') --sp는 문자로 변환, DY는 day를 요약해서 나타내준다.
from dual;

select to_char(sysdate, 'Year Month Ddsp Day(Dy)')
from dual;

select to_char(sysdate, 'd')
from dual;

select last_name, hire_date,
    to_char(hire_date, 'day'),
    to_char(hire_date, 'd')
from employees;

--과제]위 테이블을 월요일부터 입사일순 오름차순으로 정렬하라.
select last_name, hire_date,
    to_char(hire_date, 'day') day
    --, to_char(hire_date - 1, 'd') d
from employees
order by to_char(hire_date - 1, 'd');

select to_char(sysdate, 'hh24:mi:ss am')
from dual;

select to_char(sysdate, 'DD "of" Month')
from dual;

--fill mode 여백없이 띄어쓰기를 최소화한다.
select to_char(hire_date, 'fmDD Month YY')
from employees;

--과제] 사원들의 이름, 입사일, 인사평가일을 조회하라.
--      인사평가일은 입사한지 3개월 후 첫번째 월요일이다.
--      날짜는 YYYY.MM.DD로 표시한다.
select last_name, to_char(hire_date, 'YYYY.MM.DD') hire_date,
    to_char(next_day(add_months(hire_date, 3), 'monday'), 'YYYY.MM.DD') review_date
from employees;
--------------------------------------

select to_char(salary) --숫자를 문자로 바꾸는 방법
from employees;

select to_char(salary, '$99,999.99'),
    to_char(salary, '$00,000.00')
from employees
where last_name = 'Ernst';

select '|' || to_char(12.12, '9999.999') || '|',
    '|' || to_char(12.12, '0000.000') || '|'
from dual;

select '|' || to_char(12.12, 'fm9999.999') || '|',
    '|' || to_char(12.12, 'fm0000.000') || '|'
from dual;

select to_char(1237, 'L9999') --원단위 사용시
from dual;

--과제] <이름> earns <월급> monthly but wants <$,월급x3>. 를 조회하라.
select last_name || 'earns' ||
    to_char(salary, 'fm$99,999') || ' monthky but wants ' ||
    to_char(salary * 3, 'fm$99,999') || '.' 
from employees;
---------------------------------

select last_name, hire_date
from employees
where hire_date = to_date('Sep 21, 2005', 'Mon dd, yyyy');

select last_name, hire_date
from employees
where hire_date = to_date('Sep 21, 2005', 'fxMon  dd yy'); --Format eXtract --error
------------------------------

select to_number('1237')
from dual;

select to_number('1,237.12')
from dual; -- ERROR

select to_number('1,237.12', '9,999.99')
from dual;
----------------------------

-- null
select nvl (null, 0) --null값이 0이라는 뜻이다.
from dual;

select job_id, nvl(commission_pct, 0) --commission_pct값이 0이라는 뜻이다.
from employees;

--과제] 사원들의 이름, 직업, 연봉을 조회하라.
select last_name, job_id, salary * (1 + nvl(commission_pct, 0)) * 12 ann_sal
from employees
order by ann_sal desc;

--과제] 사원들의 이름, 커미션율을 조회하라.
--      커미션이 없다면 No Commission이라고 표현한다.
select last_name, nvl(to_char(commission_pct), 'No Commission')
from employees;

select job_id, nvl2(commission_pct, 'SAL+COMM', 'SAL') income
from employees;
select job_id, nvl2(commission_pct, 'SAL+COMM', 0) income
from employees;

select first_name, last_name,
    nullif(length(first_name),length(last_name)) --null을 리턴하던지, 1번째 값을 리턴하던지
from employees;

select to_char(null), to_number(null), to_date(null)
from dual;

select last_name, job_id,
    coalesce(to_char(commission_pct), to_char(manager_id), 'None')
from employees;
---------------------

select last_name, salary,
    decode(trunc(salary / 2000),
        0, 0.00,
        1, 0.09,
        2, 0.20,
        3, 0.30,
        4, 0.40,
        5, 0.42,
        6, 0.44,
            0.45) tax_rate
from employees
where department_id = 80;

select decode(salary, 'a', 1)
from employees;

select decode(salary, 'a', 1, 0)
from employees;

select decode(job_id, 1, 1)
from employees; --error, invalid number

select decode(hire_date, 'a', 1)
from employees;

select decode(hire_date, 1, 1)
from employees; --error

--과제] 사원들의 직업, 직업별 등급을 조회하라.
--      기본 등급은 null이다.
--      IT_PROG     A
--      AD_PRES     B
--      ST_MAN      C
--      ST_CLERK    D
select job_id, decode(job_id,
        'IT_PROG', 'A',
        'AD_PRES', 'B',
        'ST_MAN',  'C',
        'ST_CLERK', 'D') grade
from employees;

select last_name, job_id, salary,
    case job_id when 'IT_PROG' then 1.10 * salary
                when 'AD_PRES' then 1.05 * salary
    else salary end revised_salary
from employees;
    
select case job_id when '1' then  1
                    when '2' then 2
                    else 0
        end grade
from employees;

select case salary when 1 then  '1'
                    when 2 then '2'
                    else '0'
        end grade
from employees;

select case salary when '1' then  '1'
                    when 2 then '2'
                    else '0'
        end grade
from employees; --error

select case salary when 1 then  '1'
                    when 2 then '2'
                    else 0
        end grade
from employees; --error

select case salary when 1 then  1
                    when 2 then '2'
                    else '0'
        end grade
from employees; --error

select last_name, salary,
    case when salary < 5000 then 'low'
        when salary < 10000 then 'medium'
        when salary < 20000 then 'high'
        else 'good'
    end grade
from employees;

--과제] 사원이름, 입사일, 요일을 월요일부터 요일순으로 조회하라.
select last_name, hire_date, to_char(hire_date, 'fmday') day
from employees
order by case day
            when 'Monday' then 1
            when 'Tuesday' then 2
            when 'Wennesday' then 3
            when 'Thursday' then 4
            when 'Friday' then 5
            when 'Saturday' then 6
            when 'Sunday' then 7
    end;

--과제] 2005년 이전에 입사한 사원들에겐 100만원 상품권,
--     2005년 후에 입사한 사원들에게 10만원 상품권을 지급한다.
--     사원들의 이름, 입사일, 상품권 금액을 조회하라.
select last_name, hire_date,
        case when hire_date <= '2005/12/31' then '100만원'
            else '10만원' end gift
from employees
order by gift, hire_date;